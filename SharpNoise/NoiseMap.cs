namespace SharpNoise
{
    /// <summary>
    /// Implements a noise map, a 2-dimensional array of floating-point
    /// values.
    /// </summary>
    /// <remarks>
    /// A noise map is designed to store coherent-noise values generated by a
    /// noise module, although it can store values from any source.  A noise
    /// map is often used as a terrain height map or a grayscale texture.
    ///
    /// The size (width and height) of the noise map can be specified during
    /// object construction or at any other time.
    /// 
    /// All of the values outside of the noise map are assumed to have a
    /// common value known as the border value.
    ///
    /// To set the border value, modify the BorderValue property.
    /// </remarks>
    public class NoiseMap : Map<float>
    {
        public override int UsedMemory
        {
            get
            {
                return values.Length * sizeof(float);
            }
        }

        /// <summary>
        /// Constructor.
        /// </summary>
        public NoiseMap() { }

        /// <summary>
        /// Constructor.
        /// </summary>
        public NoiseMap(int width, int height)
            : base(width, height)
        {

        }

        /// <summary>
        /// Constructor.
        /// </summary>
        public NoiseMap(NoiseMap other)
            : base(other)
        {

        }
    }
}
